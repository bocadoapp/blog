{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog.js","webpack:///./src/components/PostList.js"],"names":["Pagination","pageContext","previousPagePath","pathPrefix","nextPagePath","className","role","to","rel","IndexPage","render","this","props","data","posts","allWordpressPost","edges","PostList","React","Component","pageQuery","container","exit","opacity","enter","transition","when","staggerChildren","postVariants","transform","title","div","variants","initial","animate","map","post","node","key","id","slug","dangerouslySetInnerHTML","__html","date","author","name","excerpt","replace"],"mappings":"mJA4BeA,EAzBI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YACZC,GAD0C,EAAjBC,WACUF,EAAnCC,kBAAkBE,EAAiBH,EAAjBG,aAE1B,OACE,yBAAKC,UAAU,aAAaC,KAAK,cAC/B,yBAAKD,UAAU,sBACZH,GACC,yBAAKG,UAAU,eACb,kBAAC,IAAD,CAAME,GAAIL,EAAkBM,IAAI,QAAhC,aAKHJ,GACC,yBAAKC,UAAU,eACb,kBAAC,IAAD,CAAME,GAAIH,EAAcI,IAAI,QAA5B,Y,sFCZSC,E,gLACnBC,OAAA,WAAU,IAAD,EACuBC,KAAKC,MAA3BC,EADD,EACCA,KAAMZ,EADP,EACOA,YACqBa,EAAYD,EAAvCE,iBAAoBC,MAE5B,OACE,oCACE,kBAACC,EAAA,EAAD,CAAUH,MAAOA,IACjB,kBAAC,EAAD,CAAYb,YAAaA,EAAaE,WAAW,Q,GARlBe,IAAMC,WA0BhCC,EAAS,c,yIC3BtB,IAAMC,EAAY,CAChBC,KAAM,CAAEC,QAAS,GACjBC,MAAO,CACLD,QAAS,EACTE,WAAY,CACVC,KAAM,iBACNC,gBAAiB,MAKjBC,EAAe,CACnBN,KAAM,CAAEC,QAAS,EAAGM,UAAW,sBAC/BL,MAAO,CAAED,QAAS,EAAGM,UAAW,oBAGbpB,E,gLACnBC,OAAA,WAAU,IAAD,EACkBC,KAAKC,MAAtBE,EADD,EACCA,MAAOgB,EADR,EACQA,MAEf,OACE,6BAASzB,UAAU,uEACjB,yBAAKA,UAAU,aACXyB,EACA,6BACE,wBAAIzB,UAAU,kCAAkCyB,IAEhD,KACJ,kBAAC,IAAOC,IAAR,CAAYC,SAAUX,EAAWY,QAAQ,OAAOC,QAAQ,SACrDpB,EAAMqB,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,kBAAC,IAAON,IAAR,CACEC,SAAUJ,EACVvB,UAAU,oDACViC,IAAKF,EAAKG,IAEV,yBAAKlC,UAAU,mFACb,kBAAC,IAAD,CACEA,UAAU,QACVE,GAAE,IAAM6B,EAAKI,KACbC,wBAAyB,CACvBC,OAAQN,EAAKN,SAGjB,+BACE,0BAAMzB,UAAU,iBAAiB+B,EAAKO,MAAa,IACnD,kBAAC,IAAD,CAAMpC,GAAE,WAAa6B,EAAKQ,OAAOJ,MAC9BJ,EAAKQ,OAAOC,QAInB,6BACE,yBACEJ,wBAAyB,CACvBC,OAAQN,EAAKU,QAAQC,QAAQ,wBAAyB,OAG1D,kBAAC,IAAD,CAAM1C,UAAU,6CAA6CE,GAAE,IAAM6B,EAAKI,MAA1E,6B,GAxCqBtB,IAAMC","file":"component---src-templates-blog-js-5f53eddcb72b04161a10.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext, pathPrefix }) => {\n  const { previousPagePath, nextPagePath } = pageContext\n\n  return (\n    <nav className=\"pagination\" role=\"navigation\">\n      <div className=\"navbar navbar-menu\">\n        {previousPagePath && (\n          <div className=\"navbar-item\">\n            <Link to={previousPagePath} rel=\"prev\">\n              Previous\n            </Link>\n          </div>\n        )}\n        {nextPagePath && (\n          <div className=\"navbar-item\">\n            <Link to={nextPagePath} rel=\"next\">\n              Next\n            </Link>\n          </div>\n        )}\n      </div>\n    </nav>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport PostList from '../components/PostList'\nimport Pagination from '../components/Pagination'\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { data, pageContext } = this.props\n    const { allWordpressPost: { edges: posts } } = data\n\n    return (\n      <>\n        <PostList posts={posts} />\n        <Pagination pageContext={pageContext} pathPrefix=\"/\" />\n      </>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allWordpressPost: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n  pageContext: PropTypes.shape({\n    currentPage: PropTypes.number,\n    numPages: PropTypes.number,\n  }),\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery($limit: Int!, $skip: Int!) {\n    allWordpressPost(\n      sort: { fields: date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          ...PostListFields\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport { motion } from 'framer-motion'\n\nconst container = {\n  exit: { opacity: 0 },\n  enter: {\n    opacity: 1,\n    transition: {\n      when: 'beforeChildren',\n      staggerChildren: .5\n    }\n  }\n}\n\nconst postVariants = {\n  exit: { opacity: 0, transform: 'translateY(-100px)' },\n  enter: { opacity: 1, transform: 'translateY(0px)' }\n}\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { posts, title } = this.props\n\n    return (\n      <section className=\"flex justify-center items-center w-full py-3 px-6 md:px-20 lg:px-32\">\n        <div className=\"container\">\n          { title ? (\n            <div>\n              <h1 className=\"has-text-weight-bold is-size-2\">{title}</h1>\n            </div>\n          ) : null}\n          <motion.div variants={container} initial='exit' animate='enter'>\n            {posts.map(({ node: post }) => (\n              <motion.div\n                variants={postVariants}\n                className=\"rounded border border-gray-200 p-10 mb-6 md:mb-12\"\n                key={post.id}\n              >\n                <div className='flex flex-col md:flex-row text-center md:text-left justify-between items-center'>\n                  <Link\n                    className=\"title\"\n                    to={`/${post.slug}`}\n                    dangerouslySetInnerHTML={{\n                      __html: post.title\n                    }}\n                  />\n                  <small>\n                    <span className='text-gray-500'>{post.date}</span>{' '}\n                    <Link to={`/author/${post.author.slug}`}>\n                      {post.author.name}\n                    </Link>\n                  </small>\n                </div>\n                <div>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: post.excerpt.replace(/<p class=\"link-more.*/, ''),\n                    }}\n                  />\n                  <Link className=\"font-bold text-sm text-center md:text-left\" to={`/${post.slug}`}>\n                    Seguir leyendo →\n                  </Link>\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n}\n\nexport const pageQuery = graphql`\n  fragment PostListFields on wordpress__POST {\n    id\n    title\n    excerpt\n    author\n    date(formatString: \"MMMM DD, YYYY\")\n    slug\n  }\n`\n"],"sourceRoot":""}